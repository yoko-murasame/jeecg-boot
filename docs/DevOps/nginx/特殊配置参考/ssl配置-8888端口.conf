#防域名污染
server {
  listen 80 default_server;
  server_name _;
  access_log off;
  return 444;
}

#防域名污染
server {
  listen 443 ssl default_server;
  # listen [::]:443 ssl ipv6only=off default_server;
  server_name _;
  ssl_certificate /etc/nginx/ssl/aa.bb.com.pem;
  ssl_certificate_key /etc/nginx/ssl/aa.bb.com.key;
  access_log off;
  return 444;
}

#防域名污染
server {
  listen 8888 ssl default_server;
  server_name _;
  ssl_certificate /etc/nginx/ssl/aa.bb.com.pem;
  ssl_certificate_key /etc/nginx/ssl/aa.bb.com.key;
  access_log off;
  return 444;
}

#80重定向到8888
server {
  listen 80;
  server_name aa.bb.com;
  location / {
    return 301 https://$host:8888$request_uri;
  }
}

#443重定向到8888
server {
  listen 443 ssl;
  server_name aa.bb.com;
  ssl_certificate /etc/nginx/ssl/aa.bb.com.pem;
  ssl_certificate_key /etc/nginx/ssl/aa.bb.com.key;

  # ssl验证相关配置
  ssl_session_timeout 5m; #缓存有效期
  ssl_ciphers HIGH:!NULL:!aNULL:!MD5:!DES:!3DES; #加密算法
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #安全链接可选的加密协议
  ssl_prefer_server_ciphers on; #使用服务器端的首选算法

  location / {
    return 301 https://$host:8888$request_uri;
  }

  # listen 443 ssl;
  # rewrite ^(.*)$ https://${server_name}:8888$1 permanent;
}

# 设置限制跨域头
map $http_origin $corsHost {
  default https://aa.bb.com:8888;
  "~https://aa.bb.com:8888" https://aa.bb.com:8888;
  "~https://aa.bb.com" https://aa.bb.com;
  "~http://1.1.1.1:8988" http://1.1.1.1:8988;
}

# 公网代理服务
server {
  listen 8888 ssl;
  server_name aa.bb.com;

  # ssl证书配置
  ssl_certificate /etc/nginx/ssl/aa.bb.com.pem;
  ssl_certificate_key /etc/nginx/ssl/aa.bb.com.key;
  # ssl验证相关配置
  # ssl_session_timeout 5m; #缓存有效期
  # ssl_ciphers HIGH:!NULL:!aNULL:!MD5:!DES:!3DES; #加密算法
  # ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #安全链接可选的加密协议 TLSv1 1.1 不安全
  # ssl_prefer_server_ciphers on; #使用服务器端的首选算法
  # ssl安全配置
  ssl_session_timeout 5m; # 设置 SSL 会话的超时时间
  ssl_session_cache shared:MozSSL:10m; # 在共享内存中分配 10MB 用于缓存 SSL 会话
  ssl_session_tickets off; # 禁用 SSL 会话票据
  ssl_protocols    TLSv1.2 TLSv1.3; # 只允许使用 TLS 1.2 和 TLS 1.3 协议，禁用了较旧且不安全的版本（如 TLS 1.0 和 TLS 1.1）
  ssl_prefer_server_ciphers off; # 不优先使用服务器端的首选算法，允许客户端选择密码套件。通常，客户端会选择它支持的最强密码套件。
  error_page 497 301 https://$host:$server_port$request_uri; #http重定向刀https

  client_max_body_size 2048m;
  add_header Access-Control-Allow-Origin $corsHost;

  # 转换PUT和DELETE
  set $method $request_method;
  if ($http_X_HTTP_Method_Override ~* 'DELETE') {
    set $method DELETE;
  }
  if ($http_X_HTTP_Method_Override ~* 'PUT') {
    set $method PUT;
  }
  proxy_method $method;
  # 避免端点安全问题
  if ($request_uri ~* '/actuator') {
    return 403;
  }
  # 放行options
  if ($method = 'OPTIONS') {
    return 204;
  }

  # location / {
  #   root html;
  #   index index.html index.htm;
  #   try_files $uri $uri/ /index.html;
  # }

  location / {
    # 下面配置在反代到某些https网址，包含重定向等规则时使用
    # proxy_redirect off; # proxy_redirect http://backend_server http://frontend_server; 将上游服务器返回的 Location 头部中的 URL 从 http://backend_server 替换为 http://frontend_server
    # proxy_ssl_server_name on; # 启用 SNI
    # proxy_ssl_name backend_server; # 可选：指定上游服务器的名称
    # sub_filter "cloud.sakurasep.club" $server_name; # 修改服务器返回给客户端的 HTML、CSS、JavaScript 等文件的内容
    # sub_filter_once off; # 只修改一次

    proxy_pass http://1.1.1.1:8988;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_connect_timeout 60s;
    proxy_read_timeout 7200s;
    proxy_send_timeout 60s;
  }

  # 地图服务走代理
  location ^~ /185/geoscene/ {
    proxy_pass http://1.1.1.1:6080/geoscene/;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
  location ^~ /135/arcgis/ {
    proxy_pass http://1.1.1.1:6080/arcgis/;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

}
