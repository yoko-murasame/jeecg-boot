# 设置proxy_cache路径
proxy_temp_path /etc/nginx/tianditu_temp;
proxy_cache_path /etc/nginx/tianditu levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=5g;
upstream tianditu_server {
    # http版本的天地图服务
    # server t0.tianditu.com weight=1 max_fails=2 fail_timeout=30s;
    # server t1.tianditu.com weight=1 max_fails=2 fail_timeout=30s;
    # server t2.tianditu.com weight=1 max_fails=2 fail_timeout=30s;
    # server t3.tianditu.com weight=1 max_fails=2 fail_timeout=30s;
    # server t4.tianditu.com weight=1 max_fails=2 fail_timeout=30s;
    # server t5.tianditu.com weight=1 max_fails=2 fail_timeout=30s;
    # server t6.tianditu.com weight=1 max_fails=2 fail_timeout=30s;
    # server t7.tianditu.com weight=1 max_fails=2 fail_timeout=30s;
    # https版本的天地图服务
    server t0.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;
    server t1.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;
    server t2.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;
    server t3.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;
    server t4.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;
    server t5.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;
    server t6.tianditu.gov.cn:443 weight=1 max_fails=2 fail_timeout=30s;
}
#一张图模块-一张图前端
server {
    listen 8891;
    #需要改成相应的HOST_NAME
    server_name www.epc-pm.cn onemap.epc-pm.cn;
    client_max_body_size 2048m;

    location / {
        root html/onemap;
        index index.html index.htm;
    }

    location ^~ /onemap/ {
        proxy_pass http://onemapServer/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #socket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 60s;
        proxy_read_timeout 7200s;
        proxy_send_timeout 60s;
    }

    location ^~ /iserver/ {
        proxy_pass http://superServer/iserver/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 设置天地图代理 /tianditu/cva_c/...
    location ^~ /tianditu/ {
        # 测试参考文档：
        # https://xuexb.github.io/learn-nginx/example/proxy_pass.html
        # https://www.nginx-cn.net/blog/creating-nginx-rewrite-rules/
        # https://plusnan.me/2022/05/06/tianditu-cache/

        # rewrite ^/tianditu/(.*) /\$1 break;
        # if ($args ~* (.+)) {
        #   set $args \$1&tk=xxxxxxx;
        # }
        # if ($args = "") {
        #   set $args tk=xxxxxxx;
        # }
        # set $new_uri $uri;
        # if ($request_uri ~* "/tianditu(\d+)") {
        #   set $final_uri \$1&tk=xxxxxxx;
        # }
        # proxy_pass http://t0.tianditu.com$new_uri$is_args$args;
        # set $post_tdt \$1;
        # proxy_pass http://t0.tianditu.com/$post_tdt;
        # proxy_pass http://t0.tianditu.com/$1&tk=xxxxxxx;
        # proxy_pass http://t0.tianditu.com$final_uri;
        # rewrite ^/tianditu/(.*)$ http://t0.tianditu.com\$1$args&tk=xxxxxxx break;
        # rewrite ^/tianditu/(.*)$ http://t0.tianditu.com/\$1$is_args&tk=xxxxxxx break;

        # 测试：重定向可用配置
        # if ($uri ~* "^/tianditu/(.*)") {
        #   set $new_uri $1;
        # }
        #  通过上面这种形式提取代理后的地址，添加自定义参数，rewrite指令会自动在后面拼接其他前端传来的参数
        # rewrite ^/tianditu/(.*)$ http://t0.tianditu.com/$new_uri?tk=xxxxxxx break;

        # 跨域配置
        # 第三方模块 ngx_http_headers_more_module 提供的
        # more_set_headers 'Access-Control-Allow-Origin: *';
        # 先隐藏默认的响应头，然后再添加自定义的响应头
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Credentials';
        # add_header Access-Control-Allow-Headers X-Requested-With;
        # add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Methods $http_access_control_request_methods;
        add_header Access-Control-Allow-Headers $http_access_control_request_headers;
        add_header Access-Control-Allow-Credentials 'true';
        # 允许特定的域名的跨域请求
        # if ($http_origin ~* (https?://.*\.example\.com(:[0-9]+)?) {
        #   add_header Access-Control-Allow-Origin $http_origin;
        # }

        # 最终URL重写拼接token解决方案：通过$1提取地址，然后在后面拼接自定义参数，rewrite指令会自动在后面拼接其他前端传来的参数
        #    rewrite ^/tianditu/(.*) /$1?tk=xxxxxxx break;
        rewrite ^/tianditu/(.*) /$1?tk=xxxxxxx break;

        # 代理缓存
        proxy_cache cache_one;
        proxy_cache_key $uri$is_args$args;

        # /后面的剩余uri路径以及参数会自动拼接rewrite后的地址
        # proxy_pass http://t0.tianditu.com;
        # 设置均衡负载，https版本的天地图服务
        proxy_pass https://tianditu_server/;

        # 使用 https 版本的天地图服务
        proxy_ssl_name t0.tianditu.gov.cn;
        proxy_ssl_server_name on;

        # 如果设置 Host = $host, 会导致代理的天地图地址请求失败
        # proxy_set_header Host $host;
        # proxy_set_header Host $proxy_host; # 可以，但是使用均衡负载就会失效，需要写死Host
        proxy_set_header Host t0.tianditu.gov.cn;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        # 这个配置加了也会影响代理，也得使用 $proxy_host，和Host一样
        # proxy_set_header X-Forwarded-Host $http_host;

        # 缓存高级设置
        # 设置用户Agent（可选）
        # proxy_set_header User-Agent "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36";
        # 忽略代理服务器的Cookie
        proxy_ignore_headers Set-Cookie;
        # 忽略代理服务器的Cache-Control
        proxy_ignore_headers Cache-Control;
        # 对于状态码为 200 和 302 的响应，Nginx 反向代理服务器会缓存这些响应内容七天（7 天）
        proxy_cache_valid 200 302 7d;
        # 设置了客户端缓存的过期时间为七天（7 天）
        expires 7d;
        # 设置缓存的响应头
        add_header X-Proxy-Cache $upstream_cache_status;
    }

    location = /50x.html {
        root html;
    }

}
