# Spring Boot容器打包 Dockerfile
# 防火墙：firewall-cmd --zone=public --add-port=8888/tcp --permanent && firewall-cmd --reload
# 构建容器：docker build -t app-separate-11 -f Dockerfile_Separate_11 .; docker save -o ./app-separate-11 app-separate-11
# 第一次载入镜像：docker load -i app-separate-11
# 启动：docker run -di --name app-container --restart=unless-stopped -p 9999:8888 -v /application/app:/app -v /application/upFiles:/opt/upFiles app-separate-11

FROM bitnami/java:11
WORKDIR /

# 时区
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && dpkg-reconfigure -f noninteractive tzdata
# 文件目录
RUN mkdir -p /opt/upFiles && mkdir -p /opt/webapp

# 设置字符集(防止应用日志乱码)
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
# 应用目录
ENV APP /app
# 应用入口
ENV APP_NAME=main.jar
# 依赖文件夹，设置为空时，不以配置分离式启动
ENV APP_LIB_PATH=lib APP_CONFIG_PATH=config
# 配置启用配置文件
ENV APP_PROFILE_ACTIVE=prod APP_PORT=8888
# 特殊JVM参数
ENV APP_JVM_OPTION="-Djava.security.egd=file:/dev/./urandom -Xms2048m -Xmx2048m"

# 暴露端口
EXPOSE $APP_PORT/tcp
# 应用-入口文件夹（必须）
VOLUME $APP
# 应用-本地文件上传目录（建议）
VOLUME /opt/upFiles
# 应用-本地webapp目录（可选）
VOLUME /opt/webapp

CMD echo "环境变量: ${PATH}" \
    && echo "启动app: $APP" && cd $APP && ls . -al \
    && if [ -n "$APP_LIB_PATH" ] && [ -n "$APP_CONFIG_PATH" ]; then \
           java $APP_JVM_OPTION \
                     -Dloader.path=$APP_LIB_PATH,$APP_CONFIG_PATH \
                     -Dspring.profiles.active=$APP_PROFILE_ACTIVE \
                     -Dserver.port=$APP_PORT \
                     -jar $APP_NAME; \
       else \
           java $APP_JVM_OPTION \
                    -Dspring.profiles.active=$APP_PROFILE_ACTIVE \
                    -Dserver.port=$APP_PORT \
                    -jar $APP_NAME; \
       fi
