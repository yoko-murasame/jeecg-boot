package ${bussiPackage}.rest.${entityPackage};

import ${bussiPackage}.core.base.bean.HyitPage;
import ${bussiPackage}.core.logger.aspect.FinOperationLog;
import ${bussiPackage}.core.logger.enums.LogTypeEnum;
import ${bussiPackage}.core.logger.enums.OperTypeEnum;
import ${bussiPackage}.core.web.response.BaseRest;
import ${bussiPackage}.core.web.response.WebResponse;
import ${bussiPackage}.entity.${entityPackage}.${entityName};
import ${bussiPackage}.form.${entityPackage}.${entityName}DeleteForm;
import ${bussiPackage}.form.${entityPackage}.${entityName}Form;
import ${bussiPackage}.form.${entityPackage}.${entityName}QueryForm;
import ${bussiPackage}.service.${entityPackage}.I${entityName}Service;
import ${bussiPackage}.vo.${entityPackage}.${entityName}VO;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import javax.validation.Valid;

/**
 * 表控制层-${tableVo.ftlDescription}-${entityName}
 */
@Slf4j
@Api(tags = "${tableVo.ftlDescription}-${entityName}-功能接口")
@RestController
@RequestMapping("/${entityPackage}/${entityName?uncap_first}")
public class ${entityName}Rest extends BaseRest {

    @Resource
    private I${entityName}Service ${entityName?uncap_first}Service;

    @ApiOperation("新增-${tableVo.ftlDescription}-${entityName}")
    @FinOperationLog(value = "新增-${tableVo.ftlDescription}-${entityName}", type = OperTypeEnum.ADD, logType = LogTypeEnum.BUSINESS, operModule = "${entityPackage}")
    @PostMapping("/add${entityName}")
    public WebResponse<String> add${entityName}(@Valid @RequestBody ${entityName}Form form) {
        // 当前登陆人信息获取 AuthUserDetail authUser = HyitAuthUtils.getCurrentUser();
        return buildSuccessResponse(${entityName?uncap_first}Service.add${entityName}(form));
    }

    @ApiOperation("更新-${tableVo.ftlDescription}-${entityName}")
    @FinOperationLog(value = "更新-${tableVo.ftlDescription}-${entityName}", type = OperTypeEnum.UPDATE, logType = LogTypeEnum.BUSINESS, operModule = "${entityPackage}")
    @PostMapping("/edit${entityName}")
    public WebResponse<String> update${entityName}(@Valid @RequestBody ${entityName}Form form) {
        // 当前登陆人信息获取 AuthUserDetail authUser = HyitAuthUtils.getCurrentUser();
        return buildSuccessResponse(${entityName?uncap_first}Service.edit${entityName}(form));
    }

    @ApiOperation("删除-${tableVo.ftlDescription}-${entityName}")
    @FinOperationLog(value = "删除-${tableVo.ftlDescription}-${entityName}", type = OperTypeEnum.DELETE, logType = LogTypeEnum.BUSINESS, operModule = "${entityPackage}")
    @PostMapping("/delete${entityName}")
    public WebResponse<String> delete${entityName}(@RequestBody ${entityName}DeleteForm form) {
        // 当前登陆人信息获取 AuthUserDetail authUser = HyitAuthUtils.getCurrentUser();
        return buildSuccessResponse(${entityName?uncap_first}Service.delete${entityName}(form));
    }

    @ApiOperation("分页查询-${tableVo.ftlDescription}-${entityName}")
    @FinOperationLog(value = "分页查询-${tableVo.ftlDescription}-${entityName}", type = OperTypeEnum.QUERY, logType = LogTypeEnum.BUSINESS, operModule = "${entityPackage}")
    @PostMapping("/paginQuery${entityName}")
    public WebResponse<HyitPage<${entityName}VO>> paginQuery${entityName}(@RequestBody ${entityName}QueryForm form) {
        // 当前登陆人信息获取 AuthUserDetail authUser = HyitAuthUtils.getCurrentUser();
        // 1.分页参数
        HyitPage<${entityName}> page = new HyitPage<>();
        page.setSize(form.getPageSize());
        page.setCurrent(form.getPageNum());
        // 2.分页查询
        HyitPage<${entityName}VO> pageResult = ${entityName?uncap_first}Service.paginQuery(form, page);
        return buildSuccessResponse(pageResult);
    }

}
